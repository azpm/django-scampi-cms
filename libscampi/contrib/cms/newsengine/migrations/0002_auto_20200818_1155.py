# -*- coding: utf-8 -*-
# Generated by Django 1.11.29 on 2020-08-18 11:55
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('multilingual', '__first__'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('renaissance', '0001_initial'),
        ('sites', '0002_alter_domain_unique'),
        ('newsengine', '0001_initial'),
        ('taggit', '0002_auto_20150616_2121'),
    ]

    operations = [
        migrations.AddField(
            model_name='storycategory',
            name='logo',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='renaissance.Image'),
        ),
        migrations.AddField(
            model_name='story',
            name='article',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='newsengine.Article'),
        ),
        migrations.AddField(
            model_name='story',
            name='audio_playlist',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='renaissance.AudioPlaylist'),
        ),
        migrations.AddField(
            model_name='story',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='story',
            name='categories',
            field=models.ManyToManyField(to='newsengine.StoryCategory'),
        ),
        migrations.AddField(
            model_name='story',
            name='document_playlist',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='renaissance.DocumentPlaylist'),
        ),
        migrations.AddField(
            model_name='story',
            name='image_playlist',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='renaissance.ImagePlaylist'),
        ),
        migrations.AddField(
            model_name='story',
            name='object_playlist',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='renaissance.ObjectPlaylist'),
        ),
        migrations.AddField(
            model_name='story',
            name='peers',
            field=models.ManyToManyField(blank=True, related_name='_story_peers_+', to='newsengine.Story'),
        ),
        migrations.AddField(
            model_name='story',
            name='tags',
            field=taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='story',
            name='video_playlist',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='renaissance.VideoPlaylist'),
        ),
        migrations.AddField(
            model_name='publish',
            name='approved_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='publish',
            name='category',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='newsengine.PublishCategory', verbose_name=b'Kind'),
        ),
        migrations.AddField(
            model_name='publish',
            name='site',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sites.Site'),
        ),
        migrations.AddField(
            model_name='publish',
            name='story',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='newsengine.Story'),
        ),
        migrations.AddField(
            model_name='publish',
            name='thumbnail',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='renaissance.Image'),
        ),
        migrations.AddField(
            model_name='articletranslation',
            name='language',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='multilingual.Language'),
        ),
        migrations.AddField(
            model_name='articletranslation',
            name='model',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='newsengine.Article'),
        ),
        migrations.AddField(
            model_name='article',
            name='audio_inlines',
            field=models.ManyToManyField(blank=True, help_text=b'Audios (inline)', to='renaissance.Audio', verbose_name='Audio'),
        ),
        migrations.AddField(
            model_name='article',
            name='author',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='article',
            name='contributors',
            field=models.ManyToManyField(blank=True, related_name='contributors', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='article',
            name='document_inlines',
            field=models.ManyToManyField(blank=True, help_text=b'Documents (inline)', to='renaissance.Document', verbose_name='Documents'),
        ),
        migrations.AddField(
            model_name='article',
            name='external_inlines',
            field=models.ManyToManyField(blank=True, help_text=b'Externals (inline)', to='renaissance.External', verbose_name='Widgets'),
        ),
        migrations.AddField(
            model_name='article',
            name='image_inlines',
            field=models.ManyToManyField(blank=True, help_text=b'Images (inline)', to='renaissance.Image', verbose_name='Images'),
        ),
        migrations.AddField(
            model_name='article',
            name='object_inlines',
            field=models.ManyToManyField(blank=True, help_text=b'Objects (inline)', to='renaissance.Object', verbose_name='HTML Objects'),
        ),
        migrations.AddField(
            model_name='article',
            name='video_inlines',
            field=models.ManyToManyField(blank=True, help_text=b'Videos (inline)', to='renaissance.Video', verbose_name='Videos'),
        ),
        migrations.AlterUniqueTogether(
            name='articletranslation',
            unique_together=set([('language', 'model')]),
        ),
    ]
