# -*- coding: utf-8 -*-
# Generated by Django 1.11.29 on 2020-08-18 11:55
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import libscampi.contrib.cms.validators
import libscampi.core.fields.pickle


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('communism', '0001_initial'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='DynamicPicker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name for easier reference', max_length=100, unique=True)),
                ('active', models.BooleanField(default=False)),
                ('keyname', models.SlugField(help_text='URL Keyname for permalinks', max_length=100, validators=[libscampi.contrib.cms.validators.magic_keyname])),
                ('max_count', models.PositiveSmallIntegerField(default=0, help_text='Max items to be picked at a time. A 0 indicates unlimited.')),
                ('include_filters', libscampi.core.fields.pickle.PickledObjectField(editable=False)),
                ('exclude_filters', libscampi.core.fields.pickle.PickledObjectField(editable=False)),
                ('commune', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dynamicpicker_related', to='communism.Commune', verbose_name='Primary Commune')),
                ('content', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType', verbose_name='Content Source')),
            ],
            options={
                'verbose_name': 'Dynamic Content Picker',
                'verbose_name_plural': 'Dynamic Content Pickers',
            },
        ),
        migrations.CreateModel(
            name='PickerTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name for easier reference', max_length=100, unique=True)),
                ('content', models.TextField(verbose_name='django template')),
                ('javascript', models.ManyToManyField(blank=True, to='communism.Javascript')),
                ('stylesheet', models.ManyToManyField(blank=True, to='communism.StyleSheet')),
            ],
            options={
                'verbose_name': 'Picker Template',
                'verbose_name_plural': 'Picker Templates',
            },
        ),
        migrations.CreateModel(
            name='StaticPicker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name for easier reference', max_length=100, unique=True)),
                ('content', models.TextField(help_text='Markdown friendly', verbose_name='Content')),
                ('commune', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='staticpicker_related', to='communism.Commune', verbose_name='Primary Commune')),
                ('javascript', models.ManyToManyField(blank=True, to='communism.Javascript')),
                ('namedbox', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='communism.NamedBox')),
                ('stylesheet', models.ManyToManyField(blank=True, to='communism.StyleSheet')),
            ],
            options={
                'verbose_name': 'Static Content Picker',
                'verbose_name_plural': 'Static Content Pickers',
            },
        ),
        migrations.AddField(
            model_name='dynamicpicker',
            name='template',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='conduit.PickerTemplate'),
        ),
        migrations.AlterUniqueTogether(
            name='dynamicpicker',
            unique_together=set([('keyname',)]),
        ),
    ]
